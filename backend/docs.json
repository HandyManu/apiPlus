{
  "openapi": "3.0.0",
  "info": {
    "title": "Simple Inventory API",
    "description": "This is a simple API",
    "contact": {
      "email": "you@your-company.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/handymanu/practica/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "admins",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "developers",
      "description": "Operations available to regular developers"
    }
  ],
  "paths": {
    "/clientes": {
      "get": {
        "tags": [
          "Clientes"
        ],
        "summary": "get de  todos los clientes",
        "description": "Obtiene todos los clientes almacenados en la base de datos.",
        "operationId": "get-clientes",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Clientes"
        ],
        "summary": "put datos nuevos a un cliente",
        "description": "",
        "operationId": "put-clientes",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id del usuario",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/clientes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "tags": [
          "Clientes"
        ],
        "summary": "post un cliente",
        "description": "Crea un nuevo cliente en la base de datos.",
        "operationId": "post-clientes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/clientes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Clientes"
        ],
        "summary": "delete un usuario de la base de datos",
        "description": "Elimina un cliente según su ID.",
        "operationId": "delete-clientes",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id del cliente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/reservaciones": {
      "get": {
        "tags": [
          "Reservaciones"
        ],
        "summary": "get de todas las reservaciones",
        "description": "Obtiene todas las reservaciones de la base de datos.",
        "operationId": "get-reservaciones",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Reservaciones"
        ],
        "summary": "put datos de una reservación",
        "operationId": "put-reservaciones",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id de la reservacion",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/reservaciones"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "tags": [
          "Reservaciones"
        ],
        "summary": "post una reservación",
        "description": "Crea una nueva reservación en la base de datos.",
        "operationId": "post-reservaciones",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reservaciones"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Reservaciones"
        ],
        "summary": "delete una reservación de la base de datos",
        "description": "Elimina una reservación según su ID.",
        "operationId": "delete-reservaciones",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id de la reservacion",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/clientes/clientesId": {
      "get": {
        "tags": [
          "clientesId"
        ],
        "summary": "get de  todos los clientes por id",
        "description": "Obtiene un  cliente especifico  almacenado en la base de datos.",
        "operationId": "get-clientes-clientesId",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id del usuario",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/reservaciones/reservacionesId": {
      "get": {
        "tags": [
          "reseravcionesId"
        ],
        "summary": "get de todas las reservaciones por id",
        "description": "Obtiene una reservacion especifica de la base de datos.",
        "operationId": "get-reservaciones-reservacionesId",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id de la reservación ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "clientes": {
        "title": "clientes",
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "x-stoplight": {
              "id": "m59dph13yod1m"
            }
          },
          "Email": {
            "type": "string",
            "x-stoplight": {
              "id": "cku1dkhodrno7"
            }
          },
          "Password": {
            "type": "string",
            "x-stoplight": {
              "id": "6he3m9dth1zgq"
            }
          },
          "Phone": {
            "type": "string",
            "x-stoplight": {
              "id": "1sg0l4xc3ps7d"
            }
          },
          "Age": {
            "type": "string",
            "x-stoplight": {
              "id": "7oy2m7uw08plj"
            }
          }
        }
      },
      "reservaciones": {
        "title": "reservaciones",
        "type": "object",
        "properties": {
          "ClientId": {
            "type": "string",
            "x-stoplight": {
              "id": "pynk1enlleye0"
            }
          },
          "Vehicle": {
            "type": "string",
            "x-stoplight": {
              "id": "oz3s4ssn22hse"
            }
          },
          "Service": {
            "type": "string",
            "x-stoplight": {
              "id": "y7jriijvkwvxe"
            }
          },
          "Status": {
            "type": "string",
            "x-stoplight": {
              "id": "kcovix9zl6ff2"
            }
          }
        }
      }
    }
  }
}